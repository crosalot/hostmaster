<?php

function hosting_clone_hosting_tasks() {
  $options = array();

  $options['site']['clone'] = array(
    'title' => t('Clone'),
    'description' => t('Copy the site to a new platform.'),
    'weight' => 5
  );
  return $options;
}

function hosting_clone_perm() {
  return array(
    'create clone task',
  );
}

function hosting_task_clone_form_validate($form, &$form_state) {
  if (!$form_state['values']['parameters']['hidden'] && !$form_state['values']['parameters']['target_platform']) {
    form_set_error('parameters][target_platform', t('You need to select a valid platform to migrate your site to.'));
  }
  $url = strtolower($form_state['values']['parameters']['new_name']); // domain names are case-insensitive
  if (!_hosting_valid_fqdn($url)) {
    form_set_error('title', t("You have not specified a valid url for this site."));
  }
  if (hosting_site_exists($url)) {
    form_set_error('title', t("The domain name you have specified is not unique."));
  }
  if ($form_state['values']['parameters']['aliases']) {
    $aliases = explode("\n", $form_state['values']['parameters']['aliases']);
    foreach ($aliases as $alias) {
      if ($alias = trim($alias)) {
        if (!hosting_domain_allowed($alias, (array) $node)) {
          form_set_error('aliases', t('The domain name @alias is already in use', array('@alias' => $alias)));
        }
      }
    }
  }
}

function hosting_clone_theme($existing, $type, $theme, $path) {
  return array('hosting_task_clone_form' => array('arguments' => array('form' => NULL)));
}

function hosting_task_clone_form($node) {
  $form = hosting_task_migrate_form($node);
  $form['new_name'] = array (
    '#title' => t('New site name'),
    '#type' => 'textfield',
    '#weight' => '-1',
    '#required' => TRUE,
    '#default_value' => $node->title
  );
  if (module_exists('hosting_alias')) {
    $form['aliases'] = array(
      '#type' => 'textarea',
      '#title' => t('Domain aliases'),
      '#description' => t('Your site can also be accessed through these domain names. This field requires each domain alias to be on its own line'),
      '#default_value' => implode("\n", (array) $form['#node']->aliases),
      '#weight' => 10,
    );
    $form['redirection'] = array(
      '#type' => 'checkbox',
      '#title' => t('Redirection'),
      '#description' => t('Aliases will all be redirected to the main domain if this is checked. Otherwise, all aliases will be accessible transparently.'),
      '#default_value' => isset($form['#node']->redirection) ? $form['#node']->redirection : variable_get('hosting_alias_redirection', FALSE),
    );
  }
  return $form;
}

function theme_hosting_task_clone_form(&$form) {
  return theme_hosting_task_migrate_form($form);
}

